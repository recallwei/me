---
import { type CollectionEntry, getEntries } from 'astro:content'

import { RelatedPosts } from '@/components'
import { THEME_META } from '@/configs'
import { TagHrefMap } from '@/constants'
import { BaseLayout } from '@/layouts'
import type { Lang } from '@/types'
import { getDateByPostId } from '@/utils'
// import { getLastUpdatedTime } from '@/utils/server'
import HistoryIcon from '~icons/fluent/history-16-filled'
import EditIcon from '~icons/fluent/notepad-edit-16-filled'

export interface Props {
  post: CollectionEntry<'post'>
  lang: Lang
}

const { post, lang } = Astro.props

const { Content } = await post.render()

const releaseTime = getDateByPostId(post.id)

const editURL = THEME_META.editLink.pattern.replace(/:path/g, `/${post.id}`)
const editLink = THEME_META.editLink.text
const lastUpdatedTime = releaseTime
// const lastUpdatedTime = getLastUpdatedTime(post.id)

const relatedPosts = []
try {
  const getRelatedPosts = await getEntries(post.data.relatedPosts ?? [])
  relatedPosts.push(...getRelatedPosts)
} catch {
  //
}

const { title, tags } = post.data
---

<BaseLayout
  title={title}
  contentTitle={title}
>
  <div class="mb-4 text-lg font-medium text-muted dark:text-white">
    <div class="space-x-1 tracking-wider">
      <span>{releaseTime}</span>
      {post.data.draft && <span class="text-primary">{lang === 'en' ? '[Draft]' : '【草稿】'}</span>}
    </div>

    {
      Array.isArray(tags) && tags.length > 0 && (
        <div class="mt-2 flex items-center space-x-2">
          {tags.map((tag) => (
            <a
              class="block w-fit select-none rounded-sm bg-primary px-1 py-0.5 text-sm text-gray-950 dark:text-white"
              href={`/posts${lang === 'zh' ? '/zh' : ''}?tag=${TagHrefMap.get(tag)}`}
            >
              {tag}
            </a>
          ))}
        </div>
      )
    }
  </div>

  <div class="prose max-w-full dark:prose-invert">
    <Content />
  </div>

  <>
    {
      Array.isArray(relatedPosts) && relatedPosts.length > 0 && (
        <RelatedPosts
          data={relatedPosts}
          client:only="react"
        />
      )
    }
  </>

  <div class="mt-6 flex flex-wrap items-center space-y-1 text-lg sm:space-y-0">
    <div class="w-full sm:w-1/2">
      <a
        href={editURL}
        target="_blank"
        rel="noopener noreferrer"
        class="flex w-fit space-x-1 text-primary hover:underline"
      >
        <EditIcon class="mt-[1px]" />
        <span>{editLink}</span>
      </a>
    </div>
    <div class="flex w-full items-center justify-start space-x-1 sm:w-1/2 sm:justify-end">
      {
        lastUpdatedTime !== 'Invalid Date' && (
          <>
            <HistoryIcon />
            <span>
              {THEME_META.lastUpdatedText}
              {lastUpdatedTime}
            </span>
          </>
        )
      }
    </div>
  </div>
</BaseLayout>
